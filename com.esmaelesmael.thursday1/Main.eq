/*
 * Main.eq
 * Generated by Eqela Studio 2.0b7.4
 */
public class Main :SEScene
{
    SESprite fg;
    SESprite bg;
    bool move_right = true;
    bool move_left = false;
    bool move_up = true;
    bool move_down = false;
    int speed = 100;
    double rotation;
    SESprite text;
    int bounce = 0;
    public void initialize(SEResourceCache rsc)
    {
        base.initialize(rsc);
        bg = add_sprite_for_color(Color.instance("green"), get_scene_width(), get_scene_height());
        bg.move(0,0);
        // fg = add_sprite_for_color(Color.instance("red"), get_scene_width()*0.1, get_scene_height()*0.1);
        // fg.move(100,100);
        rsc.prepare_font("fontpa", "arial italic color =black",250);
        rsc.prepare_font("myfont", "arial italic color=white",100);
        text = add_sprite_for_text(" BOUNCES = %d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
        text.move(200,200);
		rsc.prepare_image("myimage","face",get_scene_width()*0.1);
		fg = add_sprite_for_image(SEImage.for_resource("myimage"));
		fg.move(100,100);
		
        
    }
    public void update(TimeVal now, double delta)
    {
        base.update(now,delta);
        
        
        if(move_right)
        {
            fg.move(fg.get_x() + delta * speed, fg.get_y());
            rotation+=MathConstant.M_PI/80;
            fg.set_rotation(rotation);
            if(fg.get_x()+fg.get_width()>get_scene_width())
            {        
                move_right = false;
                move_left = true;
                bounce++;
                text.set_text(" BOUNCES = %d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");
            }
            speed = speed += 1;        
        }
        
            
        if(move_left)
        {
            fg.move(fg.get_x() - delta * speed, fg.get_y());
            rotation+=MathConstant.M_PI/60;
            fg.set_rotation(rotation);        
            if(fg.get_x()<0)
            {
                move_right = true;
                move_left = false;
                bounce++;
                text.set_text(" BOUNCES = %d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");                
            }
            speed += 1;
        }
        
        if(move_up)
        {
            fg.move(fg.get_x(), fg.get_y()+delta * speed);
            rotation+=MathConstant.M_PI/65;
            fg.set_rotation(rotation);
            if(fg.get_y()+fg.get_height()>get_scene_height())
            {
                move_up = false;
                move_down = true;
                bounce++;
                text.set_text(" BOUNCES = %d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");                                
            }
            speed += 1;
        }
        
        
        if(move_down)
        {
            fg.move(fg.get_x(), fg.get_y()-delta * speed);            
            if(fg.get_y()<0)
            {
                move_up = true;
                move_down = false;
                bounce++;    
                text.set_text(" BOUNCES = %d".printf().add(Primitive.for_integer(bounce)).to_string(),"myfont");                        
            }
            speed += 1;
        }
    }    
    
	public void set_rotation(double angle)
	{
   	 rotation = angle;
	}
	public double get_rotation()
	{
  	  return(rotation);
	}

	public void cleanup()
	{
		base.cleanup();
		SESprite.remove(fg);
		SESprite.remove(bg);
		SESprite.remove(text);	
	}	
}

